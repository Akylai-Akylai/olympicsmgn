import random
from superwires import games, color
games.init(screen_width=900, screen_height=600, fps=30)

class Airball(games.Sprite):
    self.dart = Dart(games.load_image("dart.png"),  games.mouse.x, games.mouse.y)
    speed = 5
    def __init__(self, image, x, y, dx, dart):
        super().__init__(image = image, x = x, y = y, dx = dx, dy = self.speed, dart = self.dart)
        
    def update(self):
            self.position = games.mouse.position
            if self.left < 0:
                self.left = 0
            if self.right > games.screen.width:
                self.right = games.screen.width

            
            
    def log(self):
        if self.airballs[0].y > games.screen.height or self.airballs[0].y < 0:
            self.airballs[0].destroy()
            del self.airballs[0]

            
    def check_catch(self):
        if self.overlaps(self.dart[0]):
        #for self.airballs[0] in self.overlapping_sprites:
            #if  isinstance(self.airballs[0], Airball):
            self.score.value += 10
            self.score.right = games.screen.width - 10
            self.dart[0].destroy()
            self.dart[0].speed += 0.5 
            try:
                self.dart[1].speed += 0.5
            except:
                pass
        try:
            if self.overlaps(self.dart[1]):
            #for self.airballs[1] in self.overlapping_sprites:
          #      if  isinstance(self.airballs[1], Airball):
                self.score.value += 10
                self.score.right = games.screen.width - 10
                self.dart[1].destroy()
                self.dart[0].speed += 0.5 
                try:
                    self.dart[1].speed += 0.5
                except:
                    pass
            if self.score.value == 100:
                games.screen.add(Win())
        except:
            pass
            
class Score(games.Text):
    def __init__(self, size, value, color, x, y):
         super().__init__(size = size, value = value, color = color, x = x, y = y)
         
class Win(games.Sprite):
    def __init__(self):
        super().__init__(image = games.load_image("Win.png"), x = 450, y = 300)
            
class Lose(games.Sprite):
    def __init__(self):
        super().__init__(image = games.load_image("lose.png"), x = 450, y = 300)
    def update(self):
        self.lose()

    def lose(self):
        if self.airballs[0].x > games.screen.width or self.airballs[0].x < 0:
            games.screen.add(Lose())
  
class Dart(games.Sprite):
    def __init__(self):
        super().__init__(image = image,  x=x, y=y)
        self.score = Score(60, 0, color.white, 1200, 50)
        games.screen.add(self.score)
        self.airballs = []

    def update(self):
        self.airball = Airball(games.load_image("ball.png"), random.randint(100,600), random.randint(100,300), random.randint(-3,5))
        if len(self.airballs) < 2:
                self.airballs.append(self.airball)
                games.screen.add(self.airballs[0])
                try:
                    games.screen.add(self.airballs[1])
                except:
                    pass
                print(self.airballs)
                self.check_catch()
                self.log()
        

        
    
games.screen.add(self)
wall = games.load_image("sky.png", transparent=False)
games.screen.background = wall
games.screen.mainloop()



***старый код, работает, но с ошибкой


from superwires import games, color
games.init(screen_width=900, screen_height=600, fps=30)

class Airball(games.Sprite):
    
    speed = 5
    
    def __init__(self, image, x, y, dx):
        super().__init__(image = image, x = x, y = y, dx = dx, dy = self.speed)
            
class Score(games.Text):
    def __init__(self, size, value, color, x, y):
         super().__init__(size = size, value = value, color = color, x = x, y = y)
         
class Win(games.Sprite):
    def __init__(self):
        super().__init__(image = games.load_image("Win.png"), x = 450, y = 300)
            
class Lose(games.Sprite):
    def __init__(self):
        super().__init__(image = games.load_image("lose.png"), x = 450, y = 300)
    def update(self):
        self.lose()

    def lose(self):
        if self.airballs[0].x > games.screen.width or self.airballs[0].x < 0:
            games.screen.add(Lose())
  
class Dart(games.Sprite):
    def __init__(self):
        super().__init__(image = games.load_image("dart.png"),  x=games.mouse.x, y=games.mouse.y)
        self.score = Score(60, 0, color.white, 1200, 50)
        games.screen.add(self.score)
        self.airballs = []

    def update(self):
        self.position = games.mouse.position
        if self.left < 0:
            self.left = 0
        if self.right > games.screen.width:
            self.right = games.screen.width

            
        self.airball = Airball(games.load_image("ball.png"), random.randint(100,600), random.randint(100,300), random.randint(-3,5))
        if len(self.airballs) < 2:
            self.airballs.append(self.airball)
            games.screen.add(self.airballs[0])
            try:
                games.screen.add(self.airballs[1])
            except:
                pass
            print(self.airballs)
            self.check_catch()
            self.log()
        
    def log(self):
        if self.airballs[0].y > games.screen.height or self.airballs[0].y < 0:
            self.airballs[0].destroy()
            del self.airballs[0]
        
    def check_catch(self):
        if self.overlaps(self.airballs[0]):
        #for self.airballs[0] in self.overlapping_sprites:
            #if  isinstance(self.airballs[0], Airball):
            self.score.value += 10
            self.score.right = games.screen.width - 10
            self.airballs[0].destroy()
            self.airballs[0].speed += 0.5 
            try:
                self.airballs[1].speed += 0.5
            except:
                pass
        try:
            if self.overlaps(self.airballs[1]):
            #for self.airballs[1] in self.overlapping_sprites:
          #      if  isinstance(self.airballs[1], Airball):
                self.score.value += 10
                self.score.right = games.screen.width - 10
                self.airballs[1].destroy()
                self.airballs[0].speed += 0.5 
                try:
                    self.airballs[1].speed += 0.5
                except:
                    pass
            if self.score.value == 100:
                games.screen.add(Win())
        except:
            pass

games.screen.add(Dart())
wall = games.load_image("sky.png", transparent=False)
games.screen.background = wall
games.screen.mainloop()
